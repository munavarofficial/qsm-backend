# Generated by Django 5.2.7 on 2025-10-03 16:39

import datetime
import django.db.models.deletion
import django.utils.timezone
import students.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Public_Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='notification')),
                ('voice', models.FileField(blank=True, null=True, upload_to='voice_notifications')),
                ('date', models.DateField(default=datetime.date.today)),
                ('time', models.TimeField(default=students.models.get_current_time)),
            ],
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('std', models.CharField(help_text="Name of the class or grade (e.g., '5th Grade', '10th Grade')", max_length=20, unique=True)),
                ('time_table', models.ImageField(blank=True, help_text="Upload the class's timetable", null=True, upload_to='time-tables')),
                ('exam_time_table', models.ImageField(blank=True, help_text='Upload the exam timetable for this class', null=True, upload_to='exam-time-tables')),
                ('last_completed_date', models.DateField(blank=True, null=True)),
                ('class_teacher', models.ForeignKey(blank=True, help_text='The teacher assigned as the class in-charge', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_charges', to='teachers.teacher')),
            ],
            options={
                'verbose_name_plural': 'Standards',
            },
        ),
        migrations.CreateModel(
            name='ClasswiseNotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('voice', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.TimeField(default=students.models.ClasswiseNotifications.get_current_time)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('std_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_notifications', to='students.standard')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('parent_name', models.CharField(max_length=50)),
                ('parent_occupation', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('former_school', models.CharField(blank=True, max_length=50, null=True)),
                ('admission_no', models.CharField(max_length=20, unique=True)),
                ('admission_date', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='students')),
                ('phone_no', models.CharField(max_length=12)),
                ('place', models.CharField(max_length=50)),
                ('reg_no', models.CharField(max_length=10, unique=True)),
                ('password', models.CharField(max_length=10)),
                ('std', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='students.standard')),
            ],
        ),
        migrations.CreateModel(
            name='Public_NotificationRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses_public', to='students.public_notification')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='read_notifications_public', to='students.students')),
            ],
        ),
        migrations.CreateModel(
            name='DailyRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('subahi', models.BooleanField(default=False)),
                ('luhur', models.BooleanField(default=False)),
                ('asar', models.BooleanField(default=False)),
                ('maqrib', models.BooleanField(default=False)),
                ('isha', models.BooleanField(default=False)),
                ('thabaraka', models.BooleanField(default=False)),
                ('waqiha', models.BooleanField(default=False)),
                ('swalath', models.BooleanField(default=False)),
                ('haddad', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.students')),
            ],
        ),
        migrations.CreateModel(
            name='Class_NotificationRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses_class', to='students.classwisenotifications')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='read_notifications_class', to='students.students')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='students.standard')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('year', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['-year', 'name'],
                'unique_together': {('name', 'year')},
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], default='present', max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='students.students')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.FloatField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams_result', to='students.students')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.term')),
            ],
            options={
                'verbose_name_plural': 'Progress Records',
                'ordering': ['-term__year', '-term__name', 'subject'],
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
    ]
